- name: "Basic path extraction"
  options: {}
  input: |
    Here are some files: src/core.ts and ./README.md
    Also, a log file /var/log/syslog
  expected:
    - "src/core.ts"
    - "./README.md"
    - "/var/log/syslog"

- name: "Windows path extraction"
  options: {}
  input: |
    Error in C:\\Users\\Test\\project\\src\\file.js
    Check the config at .\\config\\settings.json
  expected:
    - "C:\\Users\\Test\\project\\src\\file.js"
    - ".\\config\\settings.json"

- name: "Path extraction with line and column numbers"
  options: {}
  input: |
    src/components/Button.tsx:5:10 - error
    dist/bundle.js:1:12345
    /app/main.py:42
  expected:
    - "src/components/Button.tsx"
    - "/app/main.py"

- name: "Standalone filenames with extensions"
  options: {}
  input: |
    The project uses bun.lockb and has a README.md.
    But this is: package.json
  expected:
    - "README.md"
    - "package.json"

- name: "Unique paths option (default)"
  options: { unique: true }
  input: "See src/core.ts and again src/core.ts"
  expected: ["src/core.ts"]

- name: "Non-unique paths option"
  options: { unique: false }
  input: "See src/core.ts and again src/core.ts"
  expected: ["src/core.ts", "src/core.ts"]

- name: "Absolute paths option"
  options: { absolute: true, cwd: "/home/user/project" }
  input: |
    Relative path: src/index.ts
    Dot-slash path: ./dist/main.js
    Absolute path is unchanged: /etc/hosts
  expected:
    - "/home/user/project/src/index.ts"
    - "/etc/hosts"

- name: "Empty input"
  options: {}
  input: "No paths here."
  expected: []

- name: "Should ignore common transient/generated directories"
  options: {}
  input: |
    Path in node_modules/package/file.js
    Path in .git/hooks/pre-commit
    Path in dist/bundle.js
    Path in project/build/output.css
    A file called distribution/file.js should not be ignored.
  expected:
    - "distribution/file.js"

- name: "Should ignore common lockfiles"
  options: {}
  input: |
    This project uses bun.lockb and package-lock.json.
    But this is fine: my-package.json
  expected:
    - "my-package.json"

- name: "Paths with special characters and surrounding punctuation"
  options: {}
  input: |
    Paths can be tricky: (src/components/Button (new).tsx),
    <[dist/app-v2.js]>, or even "quoted/path.css".
    A path with a number in extension: file.v2.js
  expected:
    - "src/components/Button (new).tsx"
    - "quoted/path.css"
    - "file.v2.js"

- name: "Should extract common files without extensions"
  options: {}
  input: "Check the Dockerfile and also the Makefile for build instructions."
  expected:
    - "Dockerfile"
    - "Makefile"

- name: "Should avoid matching domains from emails and URLs"
  options: {}
  input: |
    Contact me at user@domain.com.
    Check the website http://example.org/index.html and also https://another.com.
    A file share: //server/file.txt
    But this should be found: a/b/c.com
  expected:
    - "/index.html"
    - "a/b/c.com"
    - "/server/file.txt"

- name: "Advanced path extraction with complex cases"
  options: {}
  input: |
    Quoted path: "src/app/main.css"
    Path with query string: /assets/style.css?v=1.2
    Path with fragment: /images/pic.jpg#fragment
    Path in URL: https://example.com/some/path/to/resource.json
    File with multiple dots: my.component.test.js and another.is.here.md
    Path with unicode: src/för/måin.ts
    Path next to text: file.txt,but notthispart.
    Not a file: user@domain.com, nothing to see.
    But this is a file: a/b/c.io
  expected:
    - "src/app/main.css"
    - "/assets/style.css"
    - "/images/pic.jpg"
    - "/some/path/to/resource.json"
    - "my.component.test.js"
    - "another.is.here.md"
    - "src/för/måin.ts"
    - "file.txt"
    - "a/b/c.io"

- name: "Quoted paths with spaces"
  options: {}
  input: |
    Error in "/path with spaces/file.js" and also in 'another path/with spaces.ts'.
  expected:
    - "/path with spaces/file.js"
    - "another path/with spaces.ts"

- name: "Paths with scoped npm packages"
  options: {}
  input: 'Requires "@scoped/package/index.js" and also regular ''package/main.js'''
  expected:
    - "@scoped/package/index.js"
    - "package/main.js"

- name: "Paths with tilde"
  options: {}
  input: "Check ~/documents/report.docx."
  expected:
    - "~/documents/report.docx"

- name: "Complex relative paths with parent selectors"
  options: {}
  input: "Path is ../../src/app/../core/utils.ts"
  expected:
    - "../../src/app/../core/utils.ts"

- name: "Windows UNC paths"
  options: {}
  input: "Data at \\\\network-share\\folder\\data.csv and //another/share"
  expected:
    - "\\\\network-share\\folder\\data.csv"
    - "//another/share"

- name: "Should avoid matching version numbers"
  options: {}
  input: "Release v3.4.5 is out. See also file-1.2.3.log"
  expected:
    - "file-1.2.3.log"

- name: "Should avoid matching UUIDs and commit hashes"
  options: {}
  input: "Error ID: a1b2c3d4-e5f6-7890-abcd-ef1234567890, commit: f0e9d8c7. see file.log"
  expected:
    - "file.log"

- name: "Paths inside URLs with ports"
  options: {}
  input: "Asset is at http://localhost:8080/assets/img/logo.png. And another at just /path/to/file.js"
  expected:
    - "/assets/img/logo.png"
    - "/path/to/file.js"

- name: "Paths with mixed slashes"
  options: {}
  input: "A strange path: src/mix\\slash/component.tsx"
  expected:
    - "src/mix\\slash/component.tsx"

- name: "Paths with multiple parent selectors"
  options: {}
  input: "Go way up with ../../../../../etc/passwd"
  expected:
    - "../../../../../etc/passwd"

- name: "Paths adjacent to brackets and commas"
  options: {}
  input: "Files are [file1.txt], (file2.log), and {path/to/file3.json}."
  expected:
    - "file1.txt"
    - "file2.log"
    - "path/to/file3.json"
- name: "Should extract paths from TypeScript compiler error output"
  options: {}
  input: |
    src/components/SettingsScreen.tsx:5:10 - error TS6133: 'AI_PROVIDERS' is declared but its value is never read.

    5 import { AI_PROVIDERS, SETTINGS_FOOTER_ACTIONS } from '../constants/settings.constants';
               ~~~~~~~~~~~~

    src/hooks/useDebugMenu.tsx:101:29 - error TS2554: Expected 4 arguments, but got 3.

    101                 initActions.setAnalysisResults('relaycode-tui', true, false);
                                    ~~~~~~~~~~~~~~~~~~

      src/stores/init.store.ts:30:99
        30         setAnalysisResults: (projectId: string, gitignoreFound: boolean, gitInitialized: boolean, configExists: boolean) => void;
                                      ~~~~~~~~~~~~~~~~~~~~~
        An argument for 'configExists' was not provided.

    src/services/copy.service.ts:5:10 - error TS2305: Module '"./fs.service"' has no exported member 'FileSystemService'.

    5 import { FileSystemService } from './fs.service';
               ~~~~~~~~~~~~~~~~~

    src/services/init.service.ts:10:32 - error TS2305: Module '"../constants/fs.constants"' has no exported member 'PROMPT_FILE_NAME'.

    10 import { STATE_DIRECTORY_NAME, PROMPT_FILE_NAME } from '../constants/fs.constants';
                                      ~~~~~~~~~~~~~~~~
    src/services/init.service.ts:20:25 - error TS2554: Expected 1 arguments, but got 0.

    20         await FsService.updateGitignore();
                               ~~~~~~~~~~~~~~~~

      src/services/fs.service.ts:42:32
        42 const updateGitignore = async (cwd: string): Promise<{ created: boolean, updated: boolean }> => {
                                          ~~~~~~~~~~~
        An argument for 'cwd' was not provided.


    Found 5 errors.
  expected:
    - "src/components/SettingsScreen.tsx"
    - "src/hooks/useDebugMenu.tsx"
    - "src/stores/init.store.ts"
    - "src/services/copy.service.ts"
    - "src/services/init.service.ts"
    - "src/services/fs.service.ts"
